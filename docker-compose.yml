version: '3.8'

services:
  # Traefik Reverse Proxy (Обратный прокси-сервер Traefik)
  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    command:
      - "--api.insecure=true"  # Enable Traefik dashboard (Включить панель управления Traefik)
      - "--providers.docker=true"  # Enable Docker provider (Включить провайдера Docker)
      - "--entrypoints.web.address=:80"  # HTTP entry point (HTTP точка входа)
      - "--entrypoints.websecure.address=:443"  # HTTPS entry point (HTTPS точка входа)
    ports:
      - "80:80"  # Expose HTTP port (Открыть порт 80 для HTTP)
      - "443:443"  # Expose HTTPS port (Открыть порт 443 для HTTPS)
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"  # Allow Traefik to interact with Docker (Позволяет Traefik взаимодействовать с Docker)
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.${DOMAIN}`)"  # Traefik Dashboard (Панель управления Traefik)

  # OpenVPN service (Сервис OpenVPN)
  openvpn:
    image: "kylemanna/openvpn"
    container_name: "openvpn-server"
    restart: unless-stopped
    environment:
      - "OVPN_SERVER_URL=udp://vpn.open.${DOMAIN}"  # OpenVPN server URL (URL сервера OpenVPN)
    volumes:
      - "./vpn/openvpn:/etc/openvpn"
    ports:
      - "1194:1194/udp"  # OpenVPN UDP port (UDP порт OpenVPN)
    networks:
      - vpn_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.openvpn.rule=Host(`vpn.open.${DOMAIN}`)"  # OpenVPN service domain (Домен для сервиса OpenVPN)
    depends_on:
      - traefik  # OpenVPN depends on Traefik (OpenVPN зависит от Traefik)

  # WireGuard service (Сервис WireGuard)
  wireguard:
    image: "linuxserver/wireguard"
    container_name: "wireguard-server"
    restart: unless-stopped
    environment:
      - "SERVERURL=wg.${DOMAIN}"  # WireGuard server URL (URL сервера WireGuard)
      - "SERVERPORT=51820"  # WireGuard port (Порт WireGuard)
    volumes:
      - "./vpn/wireguard:/config"
    ports:
      - "51820:51820/udp"  # WireGuard UDP port (UDP порт WireGuard)
    networks:
      - vpn_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wireguard.rule=Host(`vpn.wg.${DOMAIN}`)"  # WireGuard service domain (Домен для сервиса WireGuard)
    depends_on:
      - traefik  # WireGuard depends on Traefik (WireGuard зависит от Traefik)

  # Admin panel for OpenVPN (Административная панель для OpenVPN)
  openvpn-admin:
    image: "ghcr.io/linuxserver/openvpn-admin"
    container_name: "openvpn-admin"
    restart: unless-stopped
    environment:
      - "DATABASE_URL=sqlite:///config/openvpn.db"
      - "OPENVPN_SERVER=udp://vpn.open.${DOMAIN}"  # OpenVPN server domain (Домен сервера OpenVPN)
    volumes:
      - "./vpn/openvpn-admin:/config"
    ports:
      - "8080:80"  # Admin UI port (Порт UI для администрирования)
    networks:
      - vpn_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.openvpn-admin.rule=Host(`admin.open.${DOMAIN}`)"  # OpenVPN Admin Panel domain (Домен для панели администратора OpenVPN)
    depends_on:
      - openvpn  # Admin panel depends on OpenVPN service (Панель администратора зависит от сервиса OpenVPN)
      - traefik  # Admin panel depends on Traefik (Панель администратора зависит от Traefik)

  # Admin panel for WireGuard (Административная панель для WireGuard)
  wireguard-admin:
    image: "ghcr.io/linuxserver/wireguard-admin"
    container_name: "wireguard-admin"
    restart: unless-stopped
    environment:
      - "DATABASE_URL=sqlite:///config/wireguard.db"
      - "WIREGUARD_SERVER=wg.${DOMAIN}"  # WireGuard server domain (Домен сервера WireGuard)
    volumes:
      - "./vpn/wireguard-admin:/config"
    ports:
      - "9090:80"  # Admin UI port (Порт UI для администрирования)
    networks:
      - vpn_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wireguard-admin.rule=Host(`admin.wg.${DOMAIN}`)"  # WireGuard Admin Panel domain (Домен для панели администратора WireGuard)
    depends_on:
      - wireguard  # Admin panel depends on WireGuard service (Панель администратора зависит от сервиса WireGuard)
      - traefik  # Admin panel depends on Traefik (Панель администратора зависит от Traefik)

networks:
  vpn_network:  # VPN network (Сеть для VPN)
    driver: bridge
